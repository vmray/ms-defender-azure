{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Submit Microsoft Defender EDR/AV Alerts to VMRay Function App", 
        "description": "This playbook runs when a Microsoft Defender alert is generated.",
        "prerequisites": "VMRay Defender Function App",       
        "prerequisitesDeployTemplateFile": "../FunctionApp/azuredeploy.json",
        "postDeploymentSteps": ["None"],      
        "lastUpdateTime": "2025-02-04T00:00:00.000Z", 
        "entities": [""], 
        "tags": [""], 
        "support": {
            "tier": "community" 
        },
        "author": {
            "name": "VMRay"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "SubmitDefenderAlertsToVMRay",
            "type": "string",
            "metadata": {
                "description": "Name of the Logic App/Playbook"
            }
        },
        "FunctionAppName": {
            "defaultValue": "VMRayDefender",
            "type": "string",
            "metadata": {
                "description": "Name of the FunctionApp"
            }
        }
    },
    "variables": {
		"functionappName": "[concat(toLower(parameters('Functionappname')), take(uniqueString(resourceGroup().id), 3))]",
		"WDATPConnection": "[concat('Wdatp-', parameters('PlaybookName'))]",
		"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
	},
    "resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureSentinelConnectionName')]",
			"location": "[resourceGroup().location]",
			"kind": "V1",
			"properties": {
				"displayName": "[variables('AzureSentinelConnectionName')]",
				"customParameterValues": {},
				"parameterValueType": "Alternative",
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
				}
			}
		},
		 {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('WDATPConnection')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "WDATP Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
			"identity": {
				"type": "SystemAssigned"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('WDATPConnection'))]",
				"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
						"DefenderAlertSeverity": {
							"type": "string",
							"allowedValues": [
								"High",
								"Medium",
								"Low",
								"Informational",
								"UnSpecified",
								"ALL"
							],
							"defaultValue": "ALL",
							"metadata": {
								"description": "Microsoft Defender for Endpoint Alert Severities used for filtering alerts"
							}
						},
						"DefenderAlertStatus": {
							"type": "string",
							"allowedValues": [
								"New",
								"InProgress",
								"Resolved",
								"Unknown",
								"ALL"
							],
							"defaultValue": "ALL",
							"metadata": {
								"description": "Microsoft Defender for Endpoint Alert Statuses used for filtering alerts"
							}
						}
                    },
                    "triggers": {
                        "Triggers_-_Trigger_when_new_WDATP_alert_occurs": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                },
                                "body": {
                                    "clientState": "flow",
                                    "changeType": "created",
                                    "resource": "alerts",
                                    "expirationDateTime": "2038-09-20T12:00:00Z",
                                    "notificationUrl": "@listCallbackUrl()"
                                },
                                "path": "/subscriptions"
                            }
                        }
                    },
                    "actions": {
                        "Defender_Alert_ID": {
                            "runAfter": {
                                "Defender_Alert_Severity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "defender_alert_id",
                                        "type": "string",
                                        "value": "@triggerBody()?['id']"
                                    }
                                ]
                            }
                        },
                        "Defender_Machine_ID": {
                            "runAfter": {
                                "Defender_Alert_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "defender_machine_id",
                                        "type": "string",
                                        "value": "@triggerBody()?['machineId']"
                                    }
                                ]
                            }
                        },
                        "Alerts_-_Get_single_alert": {
                            "runAfter": {
                                "Defender_AntiVirus_String": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/alerts/@{encodeURIComponent(variables('defender_alert_id'))}"
                            }
                        },
                        "Defender_Alert_Source": {
                            "runAfter": {
                                "Defender_Machine_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "defender_alert_source",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Set_Defender_Alert_Source": {
                            "runAfter": {
                                "Alerts_-_Get_single_alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "defender_alert_source",
                                "value": "@body('Alerts_-_Get_single_alert')?['detectionSource']"
                            }
                        },
                        "Defender_EDR_Source_string": {
                            "runAfter": {
                                "Defender_Alert_Source": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "defender_edr_string",
                                        "type": "string",
                                        "value": "WindowsDefenderAtp"
                                    }
                                ]
                            }
                        },
                        "Defender_AntiVirus_String": {
                            "runAfter": {
                                "Defender_EDR_Source_string": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "defender_av_string",
                                        "type": "string",
                                        "value": "WindowsDefenderAv"
                                    }
                                ]
                            }
                        },
                        "Defender_Alert_Status": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "alert_status",
                                        "type": "string",
                                        "value": "@{parameters('DefenderAlertStatus')}"
                                    }
                                ]
                            }
                        },
                        "Defender_Alert_Severity": {
                            "runAfter": {
                                "Defender_Alert_Status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "alert_severity",
                                        "type": "string",
                                        "value": "@{parameters('DefenderAlertSeverity')}"
                                    }
                                ]
                            }
                        },
                        "Check_if_the_alert_is_from_AV_or_EDR": {
                            "actions": {
                                "Check_Alert_Severity": {
                                    "actions": {
                                        "Call-VMRay-Function": {
                                            "limit": {
                                                "timeout": "PT5M"
                                            },
                                            "type": "Function",
                                            "inputs": {
                                                "body": {
                                                    "alert": "@triggerBody()",
                                                    "threat_name": "@body('Alerts_-_Get_single_alert')['threatName']",
                                                    "detection_source": "@variables('defender_alert_source')"
                                                },
                                                "function": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/VMRayDefender')]"
                                                },
                                                "retryPolicy": {
                                                    "type": "none"
                                                }
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@variables('alert_severity')",
                                                            "ALL"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@variables('alert_severity')",
                                                            "@body('Alerts_-_Get_single_alert')?['severity']"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@variables('alert_status')",
                                                            "ALL"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@variables('alert_status')",
                                                            "@body('Alerts_-_Get_single_alert')?['status']"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Set_Defender_Alert_Source": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {}
                            },
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@variables('defender_alert_source')",
                                            "@variables('defender_edr_string')"
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@variables('defender_alert_source')",
                                            "@variables('defender_av_string')"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
							"azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
								"connectionProperties": {
									"authentication": {
										"type": "ManagedServiceIdentity"
									}
								}
                            },
                             "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('WDATPConnection'))]",
                                "connectionName": "[variables('WDATPConnection')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
