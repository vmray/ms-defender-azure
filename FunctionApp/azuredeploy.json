{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "VMRayDefenderBeta",
      "minLength": 1,
      "maxLength": 20,
      "type": "string"
    },
    "AzureClientID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter Azure Client Id that you have created during app registration."
      }
    },
    "AzureClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Enter Azure Client Secret that you have created during creating the client secret."
      }
    },
    "AzureTenantID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter Azure Tenant Id of your Azure Active Directory."
      }
    },
    "AzureStorageConnectionString": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Connection String of Your Storage Account."
      }
    },
    "AzureStorageSasToken": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter SAS Token of Your Storage Account."
      }
    },
    "AppInsightsWorkspaceResourceID": {
      "type": "string",
	  "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
      }
    },
    "VmrayBaseURL": {
      "type": "string",
      "defaultValue": "https://us.cloud.vmray.com",
      "minLength": 1,
	  "metadata": {
        "description": "Enter the VMRay Base URL."
      }
    },
    "VmrayAPIKey": {
      "type": "securestring",
      "defaultValue": "<VMRay API Key>",
      "minLength": 1,
	  "metadata": {
        "description": "Enter the VMRay Api Key."
      }
    },
    "VmrayResubmit": {
      "type": "bool",
      "defaultValue": true,
	  "metadata": {
        "description": "If true, the files will be resubmitted to VMRay analyser, even if the file hash was found in VMRay."
      }
    },
    "VmrayAPIRetryTimeout": {
      "type": "int",
      "defaultValue": 5,
	  "metadata": {
        "description": "Provide maximum time to wait in minutes, when VMRay API is not responding."
      }
    },
    "VmrayAPIMaxRetry": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Provide number of retries, when VMRay API is not responding."
      }
    },
    "VmrayAnalysisJobTimeout": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Provide maximum time to wait in minutes, when VMRay Job submissions is not responding."
      }
    },
    "DefenderApiRetryTimeout": {
      "type": "int",
      "defaultValue": 5,
	  "metadata": {
        "description": "Provide maximum time to wait in minutes, when Microsoft Defender API is not responding."
      }
    },
    "DefenderApiMaxRetry": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Provide number of retries, when Microsoft Defender API is not responding."
      }
    },
	"MachineAvailabilityTimeout": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Provide maximum time to wait in minutes, when the machine is not responding."
      }
    },
	"MachineAvailabilityRetry": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Provide number of retries, when machine is not responding."
      }
    },
    "CreateIndicatorsInDefender": {
      "type": "bool",
      "defaultValue": true,
	  "metadata": {
        "description": "If true, Indicators will be created in Microsoft Defender"
      }
    },
    "VmraySampleVerdict": {
      "type": "string",
      "allowedValues": [
        "Malicious",
        "Suspicious",
        "Malicious & Suspicious"
      ],
      "defaultValue": "Malicious",
	  "metadata": {
        "description": "Based on the selection, Indicators will be created in Microsoft Defender."
      }
    },
    "DefenderIndicatorAction": {
      "type": "string",
      "allowedValues": [
        "Allowed",
        "Audit",
        "Block",
        "BlockAndRemediate",
        "Warn"
      ],
      "defaultValue": "Audit",
      "metadata": {
        "description": "The action that is taken if the indicator is discovered in the organization."
      }
    },
    "DefenderIndicatorAlert": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True if alert generation is required, False if this indicator shouldn't generate an alert."
      }
    }
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('FunctionName')), take(uniqueString(resourceGroup().id), 3))]",
    "StorageAccount": "[concat('vmraystorage', take(uniqueString(resourceGroup().id), 3))]",
    "storageRoleDefinitionId": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "deploymentStorageContainerName": "vmraystoragecontainer",
    "StorageSuffix": "[environment().suffixes.storage]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('FunctionName')]",
        "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('StorageAccount')]",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "defaultToOAuthAuthentication": true,
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('StorageAccount'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('StorageAccount'), 'default', variables('deploymentStorageContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('StorageAccount'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('StorageAccount'), 'default', 'vmray-defender-quarantine-files')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('StorageAccount'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('StorageAccount'), 'default', 'vmray-defender-functionapp-status')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('StorageAccount'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "sku": {
        "tier": "FlexConsumption",
        "name": "FC1"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobContainer",
              "value": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount'))).primaryEndpoints.blob, variables('deploymentStorageContainerName'))]",
              "authentication": {
                "type": "SystemAssignedIdentity"
              }
            }
          },
          "scaleAndConcurrency": {
            "maximumInstanceCount": 100,
            "instanceMemoryMB": 4096
          },
          "runtime": {
            "name": "python",
            "version": "3.11"
          }
        },
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('FunctionName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccount')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StorageAccount'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]"
            },
            {
              "name": "StorageAccount",
              "value": "[variables('StorageAccount')]"
            },
            {
              "name": "VmrayBaseURL",
              "value": "[parameters('VmrayBaseURL')]"
            },
            {
              "name": "VmrayAPIKey",
              "value": "[parameters('VmrayAPIKey')]"
            },
            {
              "name": "VmrayResubmit",
              "value": "[parameters('VmrayResubmit')]"
            },
            {
              "name": "VmraySampleVerdict",
              "value": "[parameters('VmraySampleVerdict')]"
            },
            {
              "name": "VmrayAPIMaxRetry",
              "value": "[parameters('VmrayAPIMaxRetry')]"
            },
            {
              "name": "VmrayAPIRetryTimeout",
              "value": "[parameters('VmrayAPIRetryTimeout')]"
            },
            {
              "name": "VmrayAnalysisJobTimeout",
              "value": "[parameters('VmrayAnalysisJobTimeout')]"
            },
            {
              "name": "MachineAvailabilityTimeout",
              "value": "[parameters('MachineAvailabilityTimeout')]"
            },
            {
              "name": "MachineAvailabilityRetry",
              "value": "[parameters('MachineAvailabilityRetry')]"
            },
            {
              "name": "DefenderApiMaxRetry",
              "value": "[parameters('DefenderApiMaxRetry')]"
            },
            {
              "name": "DefenderApiRetryTimeout",
              "value": "[parameters('DefenderApiRetryTimeout')]"
            },
            {
              "name": "AzureClientID",
              "value": "[parameters('AzureClientID')]"
            },
            {
              "name": "AzureClientSecret",
              "value": "[parameters('AzureClientSecret')]"
            },
            {
              "name": "AzureTenantID",
              "value": "[parameters('AzureTenantID')]"
            },
            {
              "name": "AzureStorageConnectionString",
              "value": "[parameters('AzureStorageConnectionString')]"
            },
            {
              "name": "AzureStorageSasToken",
              "value": "[parameters('AzureStorageSasToken')]"
            },
            {
              "name": "CreateIndicatorsInDefender",
              "value": "[parameters('CreateIndicatorsInDefender')]"
            },
            {
              "name": "DefenderIndicatorAction",
              "value": "[parameters('DefenderIndicatorAction')]"
            },
            {
              "name": "DefenderIndicatorAlert",
              "value": "[parameters('DefenderIndicatorAlert')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount'))]",
        "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount')), variables('storageRoleDefinitionId'))]",
      "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('StorageAccount'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageRoleDefinitionId'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')), '2023-12-01', 'Full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount'))]",
        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccount'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccount')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccount'), '/default/', tolower(variables('StorageAccount')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccount'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccount'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    }
  ]
}
